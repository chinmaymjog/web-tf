---
- name: Creating HTTP auth credenttials
  become: true
  hosts: "{{ env }}_webservers"
  vars_files:
  - var_files/web_vars.yml

  tasks:
  - name: Set site auth user
    delegate_to: localhost
    delegate_facts: true
    run_once: true
    ansible.builtin.shell: |
      user=$(awk -F'\t' -v s={{ site_url }} '{if ($1==s) print $2}' ~/site_index.txt)      
      echo HTTP_$user | tr [:lower:] [:upper:]
    register: site_auth_user
    when:
      - site_url != ""

  - name: Checking if config file exist in sites-available
    ansible.builtin.stat:
      path: "{{ apache2_conf }}/{{ site_url }}.conf"
    register: sites_available
    when:
      - site_url != ""

  - name: Checking if config file exist in auth-files
    vars:
      site_user: "{{ site_auth_user.stdout }}"
    ansible.builtin.stat:
      path:  "{{ auth_files }}/{{ site_user }}"
    register: auth_files_state
    when:
      - site_url != ""
      
  - name: Checking if config file exist in auth-available
    ansible.builtin.stat:
      path: "{{ auth_conf }}/{{ site_url }}.conf"
    register: auth_available
    when:
      - site_url != ""

  - name: Progress
    ansible.builtin.debug:
      msg: 
      - "{{ site_url }} does not exist"
      - "Other tasks will be skipped"
    when: sites_available.stat.exists == False

  - name: Creating site user password
    delegate_to: localhost
    delegate_facts: true
    run_once: true
    ansible.builtin.shell: |
      pass=$(openssl rand -hex 12)
      echo $pass
    register: site_auth_pass
    when: 
      - sites_available.stat.exists == True
      - auth_files_state.stat.exists == False
      - auth_available.stat.exists == False

  - name: Add a user and password to file and set permissions
    vars:
      site_user: "{{ site_auth_user.stdout }}"
    community.general.htpasswd:
      path: "{{ auth_files }}/{{ site_user }}"
      name: "{{ site_auth_user.stdout }}"
      password: "{{ site_auth_pass.stdout }}"
      owner: root
      group: web_users
      mode: 0640
    when: 
      - sites_available.stat.exists == True
      - auth_files_state.stat.exists == False
      - auth_available.stat.exists == False

  - name: adding auth VHOST config
    vars:
      site_user: "{{ site_auth_user.stdout }}"
    ansible.builtin.template:
      src: templates/http_auth.j2
      dest: "{{ auth_conf }}/{{ site_url }}.conf"
      mode: "644"
    when: 
      - sites_available.stat.exists == True
      - auth_files_state.stat.exists == False
      - auth_available.stat.exists == False

  - name: Updating local auth list
    delegate_to: localhost
    delegate_facts: true
    run_once: true
    ansible.builtin.shell: |
      echo -e {{ site_url }}'\t'{{ site_auth_user.stdout }}'\t'{{ site_auth_pass.stdout }} >> ~/http_auth_index.txt
    when: 
      - sites_available.stat.exists == True
      - auth_files_state.stat.exists == False
      - auth_available.stat.exists == False